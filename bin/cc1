#!/bin/bash

                          ###########################
                          #         ⚡️ION⚡️         #
                          ###########################

# This bash script is an injected step in the preprocessing step of C source files.
# It works by intercepting the preprocessor calls, using the `-no-integrated-cpp`
# flag available in GCC and Clang compilers.
#
# When a call to the preprocessor is made, this script reads the arguments and, if it
# finds a `-E` flag, it deflects the output to a temporary file where the `bin/inflect`
# Perl script is called. Then this temporary file is given back to the preprocessing
# step and the chain continues.
#
# This script, along with the inflect Perl script, shall be converted to a proper
# executable -- when ⚡️ION⚡️ is more mature -- to allow more portability.

# Real preprocessor executable. It shall be called to do the actual preprocessing.
PREPROCESSOR=/usr/libexec/gcc/x86_64-linux-gnu/13/cc1

# Whether or not we need to inflect this file. It shall activate in the preprocessing
# step when the executable receives the '-E' option.
INFLECT="false"

# When true, the script knows that the next arg shall contain the output file path. It
# shall activate when reaching the '-o' option.
GET_OUTFILE="false"

# Stores the output file path, retrieved from the '-o' option.
OUTFILE=""

# Stores the original arguments and options, except for the '-o' one.
ARGS=()
for arg in "$@"; do
  if [[ "$arg" == "-E" ]]; then
    INFLECT="true"
  elif [[ "$arg" == "-o" ]]; then
    GET_OUTFILE="true"
    continue
  elif [[ "$GET_OUTFILE" == "true" ]]; then
    GET_OUTFILE="false"
    OUTFILE=$arg
    continue
  fi

  ARGS+=("$arg")
done

# If we don't have to do any inflection, just pass all the args to the actual
# preprocessor and be done with it.
if [[ $INFLECT == "false" ]]; then
  $PREPROCESSOR $@
  exit $?
fi

# Decomment for debugging args passed to the preprocessor.
# echo "original args: [ $@ ]"
# echo "custom args: [ ${ARGS[@]} ]"

# Runs the preprocessor but outputs to another temporary file. This file shall be
# inflected.
$PREPROCESSOR ${ARGS[@]} -o "$OUTFILE.c"

# If the preprocessor fails, we won't do any inflection and stop the process, restoring
# the original output file name.
if [ $? -ne 0 ]; then
  mv "$OUTFILE.c" $OUTFILE
  exit 1
fi

# We shall return the preprocessor original exit code at the end of the process.
RESULT=$?

# Inflects all the container types.
cat "$OUTFILE.c" | bin/inflect > $OUTFILE

rm "$OUTFILE.c"

#echo $(cat $OUTFILE)
exit $RESULT
